/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package mini_library;

import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.time.temporal.ChronoUnit;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.function.Predicate;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Asus
 */
public class Operations_GUI extends javax.swing.JFrame {

    /**
     * Creates new form testReturn
     */
    ArrayList<Borrow_Record> borrowList = new ArrayList<>();
    ArrayList<Return_Record> returnList = new ArrayList<>();
    DefaultTableModel model1, model2;

    public Operations_GUI() {
        initComponents();
        model1 = (DefaultTableModel) table1.getModel();
        model2 = (DefaultTableModel) table2.getModel();
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(EXIT_ON_CLOSE);
        this.setTitle("Operations");
        setEditableReturnPanel(false);
        setEditableBorrowPanel(false);
        refreshTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel12 = new javax.swing.JLabel();
        jSplitPane1 = new javax.swing.JSplitPane();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tabbedPane = new javax.swing.JTabbedPane();
        borrowPanel = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        borUseridTF = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        borBookidTF = new javax.swing.JTextField();
        borStatusTF = new javax.swing.JTextField();
        borNameTF = new javax.swing.JTextField();
        borTitleTF = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        borCountTF = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        borBorrowDateTF = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        borChargeTF = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        borDueDateTF = new javax.swing.JTextField();
        borTotalChargeTF = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table1 = new javax.swing.JTable();
        returnPanel = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        retUseridTF = new javax.swing.JTextField();
        retBookidTF = new javax.swing.JTextField();
        retBorrowDateTF = new javax.swing.JTextField();
        retReturnDateTF = new javax.swing.JTextField();
        retDayBorrowTF = new javax.swing.JTextField();
        retBorrowChargeTF = new javax.swing.JTextField();
        retLateFeeTF = new javax.swing.JTextField();
        retTotalChargeTF = new javax.swing.JTextField();
        retTitleTF = new javax.swing.JTextField();
        retNameTF = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        table2 = new javax.swing.JTable();
        backBtn = new javax.swing.JButton();
        insertBtn = new javax.swing.JButton();
        refreshBtn = new javax.swing.JButton();

        jLabel12.setText("jLabel12");

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 102, 255));

        jPanel1.setBackground(new java.awt.Color(102, 102, 255));

        jLabel1.setFont(new java.awt.Font("Bodoni MT Black", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("OPERATIONS");

        tabbedPane.setBackground(new java.awt.Color(0, 51, 255));
        tabbedPane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabbedPaneMouseClicked(evt);
            }
        });

        borrowPanel.setBackground(new java.awt.Color(0, 0, 153));

        jPanel4.setBackground(new java.awt.Color(0, 0, 153));

        jLabel2.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("User ID");

        jLabel3.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Book ID");

        jLabel4.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Availability Status");

        borUseridTF.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        borUseridTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                borUseridTFFocusLost(evt);
            }
        });
        borUseridTF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                borUseridTFMouseExited(evt);
            }
        });
        borUseridTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borUseridTFActionPerformed(evt);
            }
        });
        borUseridTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                borUseridTFKeyReleased(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Name");

        jLabel6.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Title");

        borBookidTF.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        borBookidTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                borBookidTFFocusLost(evt);
            }
        });

        borStatusTF.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N

        borNameTF.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N

        borTitleTF.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N

        jPanel9.setBackground(new java.awt.Color(0, 0, 153));

        jLabel8.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Borrowed Count");

        borCountTF.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        borCountTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borCountTFActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Borrowed Date");

        borBorrowDateTF.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        borBorrowDateTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                borBorrowDateTFFocusLost(evt);
            }
        });
        borBorrowDateTF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                borBorrowDateTFMouseClicked(evt);
            }
        });
        borBorrowDateTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borBorrowDateTFActionPerformed(evt);
            }
        });
        borBorrowDateTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                borBorrowDateTFKeyReleased(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Daily Charge");

        borChargeTF.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        borChargeTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                borChargeTFKeyReleased(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Due Date");

        jLabel11.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Total Charge");

        borDueDateTF.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N

        borTotalChargeTF.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(borBorrowDateTF)
                            .addComponent(borChargeTF, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(borCountTF, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(36, 36, 36)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(25, 25, 25)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(borTotalChargeTF, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                    .addComponent(borDueDateTF))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(borCountTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(borBorrowDateTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel10)
                        .addComponent(borDueDateTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(borChargeTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(borTotalChargeTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(borUseridTF))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(borBookidTF, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE))
                        .addGap(25, 25, 25)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(borTitleTF, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                            .addComponent(borNameTF)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(borStatusTF, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(12, Short.MAX_VALUE))
            .addComponent(jPanel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(borUseridTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(borNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(borBookidTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(borTitleTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(borStatusTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User ID", "Name", "Book ID", "Title", "Daily Charge", "Total Charge"
            }
        ));
        jScrollPane1.setViewportView(table1);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 626, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout borrowPanelLayout = new javax.swing.GroupLayout(borrowPanel);
        borrowPanel.setLayout(borrowPanelLayout);
        borrowPanelLayout.setHorizontalGroup(
            borrowPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(borrowPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        borrowPanelLayout.setVerticalGroup(
            borrowPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(borrowPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(borrowPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        tabbedPane.addTab("Borrow Book Record", borrowPanel);

        returnPanel.setBackground(new java.awt.Color(0, 0, 153));

        jPanel6.setBackground(new java.awt.Color(0, 0, 153));

        jPanel7.setBackground(new java.awt.Color(0, 0, 153));

        jLabel13.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("User ID");

        jLabel14.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Book ID");

        jLabel15.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Name");

        jLabel16.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Title");

        jLabel17.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Borrowed Date");

        jLabel18.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Returned Date");

        jLabel19.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Days Borrowed");

        jLabel20.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Borrowing Charge");

        jLabel21.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("Late Fee");

        jLabel22.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Total Charge");

        retUseridTF.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        retUseridTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                retUseridTFFocusLost(evt);
            }
        });
        retUseridTF.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                retUseridTFInputMethodTextChanged(evt);
            }
        });

        retBookidTF.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        retBookidTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                retBookidTFFocusLost(evt);
            }
        });
        retBookidTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retBookidTFActionPerformed(evt);
            }
        });

        retBorrowDateTF.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        retBorrowDateTF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                retBorrowDateTFMouseClicked(evt);
            }
        });
        retBorrowDateTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retBorrowDateTFActionPerformed(evt);
            }
        });

        retReturnDateTF.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        retReturnDateTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                retReturnDateTFFocusLost(evt);
            }
        });
        retReturnDateTF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                retReturnDateTFMouseClicked(evt);
            }
        });

        retDayBorrowTF.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N

        retBorrowChargeTF.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N

        retLateFeeTF.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N

        retTotalChargeTF.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        retTotalChargeTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retTotalChargeTFActionPerformed(evt);
            }
        });

        retTitleTF.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N

        retNameTF.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        retNameTF.setForeground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(retUseridTF, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                    .addComponent(retBookidTF)
                    .addComponent(retBorrowDateTF)
                    .addComponent(retDayBorrowTF)
                    .addComponent(retReturnDateTF))
                .addGap(45, 45, 45)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel20)
                    .addComponent(jLabel21)
                    .addComponent(jLabel22)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(retLateFeeTF, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(retBorrowChargeTF, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(retTotalChargeTF, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(retNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(retTitleTF, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(27, 27, 27))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jLabel15)
                    .addComponent(retUseridTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(retNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel16)
                    .addComponent(retBookidTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(retTitleTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jLabel20)
                    .addComponent(retBorrowDateTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(retBorrowChargeTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jLabel21)
                    .addComponent(retReturnDateTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(retLateFeeTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(jLabel22)
                    .addComponent(retDayBorrowTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(retTotalChargeTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(71, Short.MAX_VALUE))
        );

        table2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User ID", "Name", "Book ID", "Title", "Days Borrowed", "Total Charge"
            }
        ));
        jScrollPane2.setViewportView(table2);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 580, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout returnPanelLayout = new javax.swing.GroupLayout(returnPanel);
        returnPanel.setLayout(returnPanelLayout);
        returnPanelLayout.setHorizontalGroup(
            returnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(returnPanelLayout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        returnPanelLayout.setVerticalGroup(
            returnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(returnPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        tabbedPane.addTab("Return Book Record", returnPanel);

        backBtn.setBackground(new java.awt.Color(0, 153, 153));
        backBtn.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        backBtn.setForeground(new java.awt.Color(0, 0, 0));
        backBtn.setText("BACK");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        insertBtn.setBackground(new java.awt.Color(0, 204, 51));
        insertBtn.setFont(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        insertBtn.setForeground(new java.awt.Color(0, 0, 0));
        insertBtn.setText("INSERT");
        insertBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertBtnActionPerformed(evt);
            }
        });

        refreshBtn.setBackground(new java.awt.Color(255, 255, 0));
        refreshBtn.setFont(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        refreshBtn.setForeground(new java.awt.Color(0, 0, 0));
        refreshBtn.setText("REFRESH");
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 1321, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(backBtn))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(460, 460, 460)
                        .addComponent(refreshBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(insertBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(backBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(insertBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(refreshBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void setEditableReturnPanel(boolean condition) {
        retNameTF.setEditable(condition);
        retTitleTF.setEditable(condition);
        retBorrowDateTF.setEditable(condition);
        retDayBorrowTF.setEditable(condition);
        retBorrowChargeTF.setEditable(condition);
        retLateFeeTF.setEditable(condition);
        retTotalChargeTF.setEditable(condition);

    }

    public void setEditableBorrowPanel(boolean condition) {
        borNameTF.setEditable(condition);
        borTitleTF.setEditable(condition);
        borStatusTF.setEditable(condition);
        borCountTF.setEditable(condition);
        borDueDateTF.setEditable(condition);
        borTotalChargeTF.setEditable(condition);

    }

    public boolean isSomeFieldEmpty() {
        int selectedTabIndex = tabbedPane.getSelectedIndex();
        String selectedTabTitle = tabbedPane.getTitleAt(selectedTabIndex);

        if (selectedTabTitle.equals("Borrow Book Record")) {
            String userid = borUseridTF.getText();
            String bookid = borBookidTF.getText();
            String borrowDate = borBorrowDateTF.getText();

            if (userid.trim().isEmpty() || bookid.trim().isEmpty() || borrowDate.trim().isEmpty()) {
                return true;
            }
        } else if (selectedTabTitle.equals("Return Book Record")) {
            String userid = retUseridTF.getText();
            String bookid = retBookidTF.getText();
            String reteurnDate = retReturnDateTF.getText();

            if (userid.trim().isEmpty() || bookid.trim().isEmpty() || reteurnDate.trim().isEmpty()) {
                return true;
            }

        }

        return false;
    }

    public void resetAllField() {
        int selectedTabIndex = tabbedPane.getSelectedIndex();
        String selectedTabTitle = tabbedPane.getTitleAt(selectedTabIndex);

        if (selectedTabTitle.equals("Borrow Book Record")) {
            // Reset fields for borrowing
            borUseridTF.setText("");
            borBookidTF.setText("");
            borNameTF.setText("");
            borTitleTF.setText("");
            borStatusTF.setText("");
            borCountTF.setText("");
            borBorrowDateTF.setText("");
            borChargeTF.setText("");
            borDueDateTF.setText("");
            borTotalChargeTF.setText("");

        } else {
            //Reset all field for the returning
            retUseridTF.setText("");
            retBookidTF.setText("");
            retNameTF.setText("");
            retTitleTF.setText("");
            retBorrowDateTF.setText("");
            retReturnDateTF.setText("");
            retDayBorrowTF.setText("");
            retBorrowChargeTF.setText("");
            retLateFeeTF.setText("");
            retTotalChargeTF.setText("");
        }
    }

    public void printName(String text) {
        if (text == null || text.trim().isEmpty()) {
            return;
        }

        try {
            ArrayList<User> userList = Database_Connectivity.searchRecordUser(text);

            for (User user : userList) {
                retNameTF.setText(user.getName());
                borNameTF.setText(user.getName());

            }

        } catch (SQLException e) {

        }
    }

    public void printTitle(String text) {
        if (text == null || text.trim().isEmpty()) {
            return;
        }

        Predicate<Book> bookID = book -> book.getBookID() == Integer.parseInt(text.trim());
        try {
            ArrayList<Book> bookList = Database_Connectivity.searchBy(bookID);

            for (Book book : bookList) {
                retTitleTF.setText(book.getTitle());
                borTitleTF.setText(book.getTitle());

                borStatusTF.setText(String.valueOf(book.isAvailable()));
            }

        } catch (SQLException e) {

        }
    }

    public boolean isDateValid(String date) {
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-mm-dd");
        dateFormat.setLenient(false);

        try {
            Date parsedDate = dateFormat.parse(date);
            return true;

        } catch (ParseException e) {
        }
        return false;
    }

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new Admin_Portal_GUI().setVisible(true);
    }//GEN-LAST:event_backBtnActionPerformed

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
        // TODO add your handling code here:
        refreshTable();
    }//GEN-LAST:event_refreshBtnActionPerformed

    public void refreshTable() {
        int selectedTabIndex = tabbedPane.getSelectedIndex();
        String selectedTabTitle = tabbedPane.getTitleAt(selectedTabIndex);

        if (selectedTabTitle.equals("Borrow Book Record")) {
            model1.setRowCount(0);
            try {
                ArrayList<Borrow_Record> resultList = Database_Connectivity.displayAllRecordBorrow();

                for (Borrow_Record br : resultList) {
                    model1.addRow(new Object[]{br.getUserID(), br.getName(), br.getBookID(), br.getTitle(), br.getDailyCharge(), br.getTotalCharge()});
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Error when fetching the data from the database.");
                return;
            }

        } else {
            try {
                model2.setRowCount(0);
                ArrayList<Return_Record> resultList = Database_Connectivity.displayAllRecordReturn();

                for (Return_Record rr : resultList) {
                    model2.addRow(new Object[]{rr.getUserID(), rr.getName(), rr.getBookID(), rr.getTitle(), rr.getDaysBorrowed(), rr.getTotalCharge()});

                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Error when fetching the data from the database.");
            }
        }
    }
    
    private void insertBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertBtnActionPerformed
        // TODO add your handling code here:
        //declare variables
        int userID;
        int bookID;
        String name;
        String title;
        boolean status;

        int borrowedCount = 0;
        double dailyCharge;
        String dueDate;

        String borrowedDate;
        String returnedDate;
        int daysBorrowed;
        double borrowingCharge;
        double lateFee;
        double totalCharge;

        //check if it is currently on borrow tab or return tab
        int selectedTabIndex = tabbedPane.getSelectedIndex();
        String selectedTabTitle = tabbedPane.getTitleAt(selectedTabIndex);

        if (isSomeFieldEmpty()) {
            JOptionPane.showMessageDialog(null, "Some field value is missing.");
            return;
        }

        try {
            if (selectedTabTitle.equals("Borrow Book Record")) {
                userID = Integer.parseInt(borUseridTF.getText());
                bookID = Integer.parseInt(borBookidTF.getText());
                name = borNameTF.getText();
                title = borTitleTF.getText();
                status = Boolean.parseBoolean(borStatusTF.getText());

                borrowedCount = Integer.parseInt(borCountTF.getText());
                borrowedDate = borBorrowDateTF.getText();
                dailyCharge = Integer.parseInt(borChargeTF.getText());
                dueDate = borDueDateTF.getText();
                totalCharge = Double.parseDouble(borTotalChargeTF.getText());

                if (isDateValid(borrowedDate) && isDateValid(dueDate)) {
                    try {
                        if (Database_Connectivity.isEligibleToBorrow(userID, bookID)) {
                            Database_Connectivity.insertBorrowRecord(userID, name, bookID, title, status, borrowedDate, dueDate, dailyCharge, totalCharge);
                            borrowList.add(new Borrow_Record(userID, name, bookID, title, status, borrowedDate, dueDate, dailyCharge, totalCharge));

                            model1.insertRow(model1.getRowCount(), new Object[]{userID, name, bookID, title, dailyCharge, totalCharge});

                            for (Book b : Book_Record_GUI.getBookList()) {
                                if (b.getBookID() == bookID) {
                                    b.setAvailable(false);
                                    break;
                                }
                            }

                            ++borrowedCount;
                            Database_Connectivity.updateUserBorrowedCount(borrowedCount, userID);
                            Database_Connectivity.updateBookAvailability(bookID, false);

                            JOptionPane.showMessageDialog(null, "Borrow Record is successfully added");
                        }
                    } catch (SQLException e) {
                        JOptionPane.showMessageDialog(null, "Error inserting data into the database.");
                    }
                }

            } else if (selectedTabTitle.equals("Return Book Record")) {
                userID = Integer.parseInt(retUseridTF.getText());
                bookID = Integer.parseInt(retBookidTF.getText());
                name = retNameTF.getText();
                title = retTitleTF.getText();

                borrowedDate = retBorrowDateTF.getText();
                returnedDate = retReturnDateTF.getText();
                daysBorrowed = Integer.parseInt(retDayBorrowTF.getText());
                borrowingCharge = Double.parseDouble(retBorrowChargeTF.getText());
                lateFee = Double.parseDouble(retLateFeeTF.getText());
                totalCharge = Double.parseDouble(retTotalChargeTF.getText());

                if (isDateValid(borrowedDate) && isDateValid(returnedDate)) {
                    try {
                        if (Database_Connectivity.isCurrentlyBorrowed(userID, bookID)) {
                            Database_Connectivity.insertReturnRecord(userID, name, bookID, title, borrowedDate, returnedDate, daysBorrowed, borrowingCharge, lateFee, totalCharge);
                            returnList.add(new Return_Record(userID, name, bookID, title, borrowedDate, returnedDate, daysBorrowed, borrowingCharge, lateFee, totalCharge));

                            model2.insertRow(model2.getRowCount(), new Object[]{userID, name, bookID, title, daysBorrowed, totalCharge});

                            for (Book b : Book_Record_GUI.getBookList()) {
                                if (b.getBookID() == bookID) {
                                    b.setAvailable(true);
                                    break;
                                }
                            }

                            if (borrowedCount > 0) {
                                borrowedCount--;
                            }
                            
                            Database_Connectivity.updateUserBorrowedCount(borrowedCount, userID);
                            Database_Connectivity.updateBookAvailability(bookID, true);

                            JOptionPane.showMessageDialog(null, "Return Record is successfully added");
                        }
                    } catch (SQLException e) {
                        JOptionPane.showMessageDialog(null, "Error inserting data into the database.");
                    }
                }

            }
            resetAllField();
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Please enter a value.");
        }
    }//GEN-LAST:event_insertBtnActionPerformed

    private void borUseridTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borUseridTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_borUseridTFActionPerformed

    private void borUseridTFMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_borUseridTFMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_borUseridTFMouseExited

    private void retBorrowDateTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retBorrowDateTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_retBorrowDateTFActionPerformed

    private void borCountTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borCountTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_borCountTFActionPerformed

    private void borUseridTFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_borUseridTFKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_borUseridTFKeyReleased

    private void retUseridTFInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_retUseridTFInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_retUseridTFInputMethodTextChanged

    private void retUseridTFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_retUseridTFFocusLost
        // TODO add your handling code here:
        String userID = retUseridTF.getText();
        printName(userID);

        if (userID == null || userID.isEmpty()) {
            retNameTF.setText("");
        }
    }//GEN-LAST:event_retUseridTFFocusLost

    private void retBookidTFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_retBookidTFFocusLost
        // TODO add your handling code here:
        String useridStr = retUseridTF.getText();
        String bookidStr = retBookidTF.getText();
        printTitle(bookidStr);

        try {
            int userID = Integer.parseInt(useridStr);
            int bookID = Integer.parseInt(bookidStr);

            if (Database_Connectivity.isCurrentlyBorrowed(userID, bookID)) {
                String borrowDate = Database_Connectivity.getBorrowDate(userID, bookID);

                retBorrowDateTF.setText(borrowDate);

            } else {
                JOptionPane.showMessageDialog(null, "This user has not borrow this book!");
            }
        } catch (SQLException s) {
            JOptionPane.showMessageDialog(null, "This user has not borrow this book!" + s.getMessage());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Please make sure you have entered correct value.");

        }
    }//GEN-LAST:event_retBookidTFFocusLost

    private void retBorrowDateTFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_retBorrowDateTFMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_retBorrowDateTFMouseClicked

    private void retReturnDateTFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_retReturnDateTFMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_retReturnDateTFMouseClicked

    private void borUseridTFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_borUseridTFFocusLost
        // TODO add your handling code here:
        String userID = borUseridTF.getText();
        printName(userID);

        if (userID == null || userID.trim().isEmpty()) {
            borNameTF.setText("");
        }
    }//GEN-LAST:event_borUseridTFFocusLost

    private void borBookidTFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_borBookidTFFocusLost
        // TODO add your handling code here:
        String userID = borUseridTF.getText();
        String bookID = borBookidTF.getText();
        printTitle(bookID);

        try {
            int count = Database_Connectivity.getBorrowedCount(Integer.parseInt(userID));
            borCountTF.setText(String.valueOf(count));

        } catch (SQLException s) {
            JOptionPane.showMessageDialog(null, "There is no user found with that userID!" + s.getMessage());

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Please enter a value.");
        }

        if (bookID == null || bookID.trim().isEmpty()) {
            borTitleTF.setText("");
        }
    }//GEN-LAST:event_borBookidTFFocusLost

    private void borBorrowDateTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borBorrowDateTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_borBorrowDateTFActionPerformed

    private void borBorrowDateTFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_borBorrowDateTFMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_borBorrowDateTFMouseClicked

    private void borBorrowDateTFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_borBorrowDateTFFocusLost
        // TODO add your handling code here:
        // Get the borrow date from the text field
        String borrowDateStr = borBorrowDateTF.getText();

        // Check if the date is valid
        if (isDateValid(borrowDateStr)) {
            try {
                // Parse the borrow date
                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                Date borrowDate = dateFormat.parse(borrowDateStr);

                // Use Calendar to add 7 days
                Calendar calendar = Calendar.getInstance();
                calendar.setTime(borrowDate);
                calendar.add(Calendar.DAY_OF_YEAR, 7); // Add 7 days

                // Format the new due date
                String dueDateStr = dateFormat.format(calendar.getTime());

                // Set the due date in the dueDateTF field
                borDueDateTF.setText(dueDateStr);
            } catch (ParseException e) {
                JOptionPane.showMessageDialog(null, "Invalid date format. Use YYYY-MM-DD.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Invalid date format. Use YYYY-MM-DD");

        }
    }//GEN-LAST:event_borBorrowDateTFFocusLost

    private void borChargeTFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_borChargeTFKeyReleased
        // TODO add your handling code here:
        try {
            double dailyCharge = Double.parseDouble(borChargeTF.getText());

            double totalCharge = dailyCharge * 7;
            borTotalChargeTF.setText(String.valueOf(totalCharge));

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Please enter a value.");
        }

    }//GEN-LAST:event_borChargeTFKeyReleased

    private void borBorrowDateTFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_borBorrowDateTFKeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_borBorrowDateTFKeyReleased

    private void retReturnDateTFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_retReturnDateTFFocusLost
        // TODO add your handling code here:
        try {
            String borrowedDate = retBorrowDateTF.getText();
            String returnedDate = retReturnDateTF.getText();

            if (!isDateValid(borrowedDate) && !isDateValid(returnedDate)) {
                JOptionPane.showMessageDialog(null, "Please enter date in this format YYYY-MM-DD.");
                return;
            }
            // Parse the dates
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
            LocalDate borrowDate = LocalDate.parse(borrowedDate, formatter);
            LocalDate returnDate = LocalDate.parse(returnedDate, formatter);

            // Calculate days borrowed
            int daysBorrowed = (int) ChronoUnit.DAYS.between(borrowDate, returnDate);

            // Update the daysBorrowed field in the UI
            retDayBorrowTF.setText(String.valueOf(daysBorrowed));

            final double DAILY_LATE_CHARGE = 2;
            double borrowingCharge = 7;
            double lateFee = 0;
            double totalCharge = 0;

            if (daysBorrowed > 7) {
                lateFee = DAILY_LATE_CHARGE * (daysBorrowed - 7);

            }
            totalCharge = borrowingCharge + lateFee;
            retBorrowChargeTF.setText(String.valueOf(borrowingCharge));
            retLateFeeTF.setText(String.valueOf(lateFee));
            retTotalChargeTF.setText(String.valueOf(totalCharge));

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Please make sure you have input the correct value.");
        } catch (DateTimeParseException pe) {
            JOptionPane.showMessageDialog(null, "Please enter date as YYYY-MM-DD.");

        }
    }//GEN-LAST:event_retReturnDateTFFocusLost

    private void retTotalChargeTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retTotalChargeTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_retTotalChargeTFActionPerformed

    private void tabbedPaneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabbedPaneMouseClicked
        // TODO add your handling code here:
        resetAllField();
    }//GEN-LAST:event_tabbedPaneMouseClicked

    private void retBookidTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retBookidTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_retBookidTFActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Operations_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Operations_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Operations_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Operations_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Operations_GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JTextField borBookidTF;
    private javax.swing.JTextField borBorrowDateTF;
    private javax.swing.JTextField borChargeTF;
    private javax.swing.JTextField borCountTF;
    private javax.swing.JTextField borDueDateTF;
    private javax.swing.JTextField borNameTF;
    private javax.swing.JTextField borStatusTF;
    private javax.swing.JTextField borTitleTF;
    private javax.swing.JTextField borTotalChargeTF;
    private javax.swing.JTextField borUseridTF;
    private javax.swing.JPanel borrowPanel;
    private javax.swing.JButton insertBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JTextField retBookidTF;
    private javax.swing.JTextField retBorrowChargeTF;
    private javax.swing.JTextField retBorrowDateTF;
    private javax.swing.JTextField retDayBorrowTF;
    private javax.swing.JTextField retLateFeeTF;
    private javax.swing.JTextField retNameTF;
    private javax.swing.JTextField retReturnDateTF;
    private javax.swing.JTextField retTitleTF;
    private javax.swing.JTextField retTotalChargeTF;
    private javax.swing.JTextField retUseridTF;
    private javax.swing.JPanel returnPanel;
    private javax.swing.JTabbedPane tabbedPane;
    private javax.swing.JTable table1;
    private javax.swing.JTable table2;
    // End of variables declaration//GEN-END:variables
}
